{"ast":null,"code":"var _jsxFileName = \"/var/www/html/react-app/src/Chat/chat.js\";\nimport React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from \"socket.io-client\";\nimport messages from \"../Messages/messages\";\nimport InfoBar from \"./InfoBar/InfoBar\";\nimport input from \"./input/input\";\nimport message from \"../Message/message\";\nlet socket;\n\nconst Chat = location => {\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [users, setUsers] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const ENDPOINT = \"localhost:5000\";\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    socket = io(ENDPOINT);\n    setRoom(room);\n    setName(name);\n    socket.emit('join', {\n      name,\n      room\n    }, error => {\n      if (error) {\n        alert(error);\n      }\n    });\n  }, [ENDPOINT, location]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages(message => [messages, message]);\n    });\n    socket.on(\"roomData\", ({\n      users\n    }) => {\n      setUsers(users);\n    });\n  });\n};\n\nconst sendMessage = event => {\n  event.preventDefault();\n\n  if (message) {\n    socket.emit(\"sendMessage\", message, () => setMessage(\"\"));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(InfoBar, {\n    room: room,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(Messages, {\n    messages: messages,\n    name: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    message: message,\n    setMessage: setMessage,\n    sendMessage: sendMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }));\n};\n\nexport default Chat;","map":{"version":3,"sources":["/var/www/html/react-app/src/Chat/chat.js"],"names":["React","useState","useEffect","queryString","io","messages","InfoBar","input","message","socket","Chat","location","name","setName","room","setRoom","users","setUsers","setMessage","setMessages","ENDPOINT","parse","search","emit","error","alert","on","sendMessage","event","preventDefault"],"mappings":";AAAC,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,IAAIC,MAAJ;;AAEA,MAAMC,IAAI,GAAIC,QAAD,IAAY;AAEtB,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBZ,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM,CAACa,IAAD,EAAMC,OAAN,IAAiBd,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM,CAACe,KAAD,EAAOC,QAAP,IAAmBhB,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACO,OAAD,EAASU,UAAT,IAAuBjB,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAACI,QAAD,EAAUc,WAAV,IAAyBlB,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAMmB,QAAQ,GAAG,gBAAjB;AAEAlB,EAAAA,SAAS,CAAC,MAAM;AAEZ,UAAM;AAACU,MAAAA,IAAD;AAAME,MAAAA;AAAN,QAAcX,WAAW,CAACkB,KAAZ,CAAkBV,QAAQ,CAACW,MAA3B,CAApB;AACAb,IAAAA,MAAM,GAAGL,EAAE,CAACgB,QAAD,CAAX;AAEAL,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAD,IAAAA,OAAO,CAACD,IAAD,CAAP;AAEAH,IAAAA,MAAM,CAACc,IAAP,CAAY,MAAZ,EAAmB;AAACX,MAAAA,IAAD;AAAME,MAAAA;AAAN,KAAnB,EAAgCU,KAAD,IAAS;AAEpC,UAAGA,KAAH,EAAS;AAELC,QAAAA,KAAK,CAACD,KAAD,CAAL;AAEH;AAEJ,KARD;AASH,GAjBQ,EAiBN,CAACJ,QAAD,EAAUT,QAAV,CAjBM,CAAT;AAoBAT,EAAAA,SAAS,CAAC,MAAI;AAEVO,IAAAA,MAAM,CAACiB,EAAP,CAAU,SAAV,EAAqBlB,OAAD,IAAW;AAE3BW,MAAAA,WAAW,CAACX,OAAO,IAAE,CAACH,QAAD,EAAUG,OAAV,CAAV,CAAX;AACH,KAHD;AAKAC,IAAAA,MAAM,CAACiB,EAAP,CAAU,UAAV,EAAqB,CAAC;AAACV,MAAAA;AAAD,KAAD,KAAW;AAE5BC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,KAHD;AAIH,GAXQ,CAAT;AAaF,CA1CD;;AA6CA,MAAMW,WAAW,GAAIC,KAAD,IAAS;AAE1BA,EAAAA,KAAK,CAACC,cAAN;;AAEA,MAAGrB,OAAH,EAAW;AAEPC,IAAAA,MAAM,CAACc,IAAP,CAAY,aAAZ,EAA0Bf,OAA1B,EAAkC,MAAIU,UAAU,CAAC,EAAD,CAAhD;AACH;;AAGL,SAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAEJ,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEA,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAET,QAApB;AAA8B,IAAA,IAAI,EAAEO,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,EAGA;AAAO,IAAA,OAAO,EAAGJ,OAAjB;AAA2B,IAAA,UAAU,EAAIU,UAAzC;AAAsD,IAAA,WAAW,EAAES,WAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHA,CAFJ;AAWE,CArBD;;AAuBD,eAAejB,IAAf","sourcesContent":[" import React, {useState,useEffect} from 'react'\n import queryString from 'query-string'\n import io from \"socket.io-client\"\n import messages from \"../Messages/messages\"\n import InfoBar from \"./InfoBar/InfoBar\"\n import input from \"./input/input\"\n import message from \"../Message/message\"\n\n let socket;\n\n const Chat = (location)=>{\n\n    const [name,setName] = useState('')\n    const [room,setRoom] = useState('')\n    const [users,setUsers] = useState('')\n    const [message,setMessage] = useState('')\n    const [messages,setMessages] = useState([])\n    const ENDPOINT = \"localhost:5000\";\n    \n    useEffect(() => {\n        \n        const {name,room} = queryString.parse(location.search)\n        socket = io(ENDPOINT)\n\n        setRoom(room)\n        setName(name)\n\n        socket.emit('join',{name,room},(error)=>{\n\n            if(error){\n\n                alert(error);\n                \n            }\n            \n        })\n    }, [ENDPOINT,location])\n\n\n    useEffect(()=>{\n\n        socket.on('message',(message)=>{\n\n            setMessages(message=>[messages,message])\n        });\n\n        socket.on(\"roomData\",({users})=>{\n\n            setUsers(users);\n        })\n    })\n\n }\n\n\n const sendMessage = (event)=>{\n\n    event.preventDefault()\n\n    if(message){\n\n        socket.emit(\"sendMessage\",message,()=>setMessage(\"\"));\n    }\n\n\nreturn  (\n\n    <div>\n    <InfoBar room={room} />\n    <Messages messages={messages} name={name}/>\n    <input message ={message}  setMessage = {setMessage}  sendMessage={sendMessage} />\n   \n\n    </div>\n)\n\n }\n\nexport default Chat\n"]},"metadata":{},"sourceType":"module"}