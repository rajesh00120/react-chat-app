{"ast":null,"code":"var _jsxFileName = \"/var/www/html/react-app/src/Chat/Chat.js\";\nimport React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from \"socket.io-client\"; // import Messages from \"../Messages/Messages\"\n\nimport InfoBar from \"../InfoBar/InfoBar\"; // import Input from \"../Input/Input\"\n\nlet socket;\n\nconst Chat = location => {\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [users, setUsers] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const ENDPOINT = \"http://3.114.230.224:8080\";\n  console.log(ENDPOINT);\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    socket = io(ENDPOINT);\n    setRoom(room);\n    setName(name);\n    socket.emit('join', {\n      name,\n      room\n    }, error => {\n      if (error) {\n        alert(error);\n      }\n    });\n    return () => {\n      socket.emit('disconnected!');\n      socket.off();\n    };\n  }, [ENDPOINT, location.search]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages(messages => [...messages, message]);\n    });\n    socket.on(\"testroom\", ({\n      users\n    }) => {\n      setUsers(users);\n    });\n  }, [messages]);\n\n  const sendMessage = event => {\n    event.preventDefault();\n\n    if (message) {\n      socket.emit(\"sendMessage\", message, () => setMessage(\"\"));\n    } // return (\n    //     <div>\n    //         <InfoBar room={room} />\n    //         <Messages messages={messages} name={name} />\n    //         <Input message={message} setMessage={setMessage} sendMessage={sendMessage} />\n    //     </div>\n    // )\n\n  };\n\n  console.log(message, messages);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(InfoBar, {\n    room: room,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    value: message,\n    onChange: event => setMessage(event.target.value),\n    onKeyPress: event => event.key == 'Enter' ? sendMessage(event) : '',\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }));\n};\n\nexport default Chat;","map":{"version":3,"sources":["/var/www/html/react-app/src/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","InfoBar","socket","Chat","location","name","setName","room","setRoom","users","setUsers","message","setMessage","messages","setMessages","ENDPOINT","console","log","parse","search","emit","error","alert","off","on","sendMessage","event","preventDefault","target","value","key"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport queryString from 'query-string'\nimport io from \"socket.io-client\"\n\n// import Messages from \"../Messages/Messages\"\nimport InfoBar from \"../InfoBar/InfoBar\"\n// import Input from \"../Input/Input\"\n\n\n\nlet socket;\n\nconst Chat = (location) => {\n\n    const [name, setName] = useState('')\n    const [room, setRoom] = useState('')\n    const [users, setUsers] = useState('')\n    const [message, setMessage] = useState('')\n    const [messages, setMessages] = useState([])\n\n    const ENDPOINT = \"http://3.114.230.224:8080\";\n    console.log(ENDPOINT)\n    useEffect(() => {\n\n        const { name, room } = queryString.parse(location.search)\n        socket = io(ENDPOINT)\n\n        setRoom(room)\n        setName(name)\n\n        socket.emit('join', { name, room }, (error) => {\n\n            if (error) {\n\n                alert(error);\n\n            }\n\n        })\n\n        return ()=>{\n        socket.emit('disconnected!');\n        socket.off();}\n        \n    }, [ENDPOINT, location.search])\n\n\n    useEffect(() => {\n\n        socket.on('message', message => {\n\n            setMessages(messages => [...messages, message])\n        });\n\n        socket.on(\"testroom\", ({ users }) => {\n\n            setUsers(users);\n        })\n    },[messages])\n\n   \n    const sendMessage = (event) => {\n\n        event.preventDefault()\n    \n        if (message) {\n    \n            socket.emit(\"sendMessage\", message, () => setMessage(\"\"));\n        }\n    \n    \n        // return (\n    \n        //     <div>\n        //         <InfoBar room={room} />\n        //         <Messages messages={messages} name={name} />\n        //         <Input message={message} setMessage={setMessage} sendMessage={sendMessage} />\n        //     </div>\n        // )\n    \n    }\n\n    console.log(message,messages)\n\n    return (\n        <div>\n             <InfoBar room={room} />\n            <input value={message}\n            onChange={(event)=>setMessage(event.target.value)}\n            onKeyPress={(event)=>event.key == 'Enter'?sendMessage(event):''}\n            type=\"text\"/>\n        </div>\n    )\n    \n    \n}\n\n\n\n\nexport default Chat\n"]},"metadata":{},"sourceType":"module"}