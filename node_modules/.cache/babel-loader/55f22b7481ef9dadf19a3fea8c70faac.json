{"ast":null,"code":"var _jsxFileName = \"/var/www/html/react-app/src/Chat/Chat.js\";\nimport React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from \"socket.io-client\"; // import Messages from \"../Messages/Messages\"\n// import InfoBar from \"../InfoBar/InfoBar\"\n// import Input from \"../Input/Input\"\n\nlet socket;\n\nconst Chat = location => {\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [users, setUsers] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const ENDPOINT = \"http://3.114.230.224:8080\";\n  console.log(ENDPOINT);\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    socket = io(ENDPOINT);\n    setRoom(room);\n    setName(name);\n    socket.emit('join', {\n      name,\n      room\n    }, error => {\n      if (error) {\n        alert(error);\n      }\n    });\n    return () => {\n      socket.emit('disconnected!');\n      socket.off();\n    };\n  }, [ENDPOINT, location.search]); // useEffect(() => {\n  //     socket.on('message', message => {\n  //         setMessages(messages => [...messages, message])\n  //     });\n  //     socket.on(\"testroom\", ({ users }) => {\n  //         setUsers(users);\n  //     })\n  // })\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"hell\");\n}; // const sendMessage = (event) => {\n//     event.preventDefault()\n//     if (message) {\n//         socket.emit(\"sendMessage\", message, () => setMessage(\"\"));\n//     }\n//     return (\n//         <div>\n//             <InfoBar room={room} />\n//             <Messages messages={messages} name={name} />\n//             <Input message={message} setMessage={setMessage} sendMessage={sendMessage} />\n//         </div>\n//     )\n// }\n\n\nexport default Chat;","map":{"version":3,"sources":["/var/www/html/react-app/src/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","socket","Chat","location","name","setName","room","setRoom","users","setUsers","message","setMessage","messages","setMessages","ENDPOINT","console","log","parse","search","emit","error","alert","off"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf,C,CAEA;AACA;AACA;;AAIA,IAAIC,MAAJ;;AAEA,MAAMC,IAAI,GAAIC,QAAD,IAAc;AAEvB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAMiB,QAAQ,GAAG,2BAAjB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAhB,EAAAA,SAAS,CAAC,MAAM;AAEZ,UAAM;AAAEM,MAAAA,IAAF;AAAQE,MAAAA;AAAR,QAAiBP,WAAW,CAACkB,KAAZ,CAAkBd,QAAQ,CAACe,MAA3B,CAAvB;AACAjB,IAAAA,MAAM,GAAGD,EAAE,CAACc,QAAD,CAAX;AAEAP,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAD,IAAAA,OAAO,CAACD,IAAD,CAAP;AAEAH,IAAAA,MAAM,CAACkB,IAAP,CAAY,MAAZ,EAAoB;AAAEf,MAAAA,IAAF;AAAQE,MAAAA;AAAR,KAApB,EAAqCc,KAAD,IAAW;AAE3C,UAAIA,KAAJ,EAAW;AAEPC,QAAAA,KAAK,CAACD,KAAD,CAAL;AAEH;AAEJ,KARD;AAUA,WAAO,MAAI;AACXnB,MAAAA,MAAM,CAACkB,IAAP,CAAY,eAAZ;AACAlB,MAAAA,MAAM,CAACqB,GAAP;AAAc,KAFd;AAIH,GAtBQ,EAsBN,CAACR,QAAD,EAAWX,QAAQ,CAACe,MAApB,CAtBM,CAAT,CAVuB,CAmCvB;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA;;AAEA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAEH,CAlDD,C,CAqDA;AAEA;AAEA;AAEA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAEA,eAAehB,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport queryString from 'query-string'\nimport io from \"socket.io-client\"\n\n// import Messages from \"../Messages/Messages\"\n// import InfoBar from \"../InfoBar/InfoBar\"\n// import Input from \"../Input/Input\"\n\n\n\nlet socket;\n\nconst Chat = (location) => {\n\n    const [name, setName] = useState('')\n    const [room, setRoom] = useState('')\n    const [users, setUsers] = useState('')\n    const [message, setMessage] = useState('')\n    const [messages, setMessages] = useState([])\n\n    const ENDPOINT = \"http://3.114.230.224:8080\";\n    console.log(ENDPOINT)\n    useEffect(() => {\n\n        const { name, room } = queryString.parse(location.search)\n        socket = io(ENDPOINT)\n\n        setRoom(room)\n        setName(name)\n\n        socket.emit('join', { name, room }, (error) => {\n\n            if (error) {\n\n                alert(error);\n\n            }\n\n        })\n\n        return ()=>{\n        socket.emit('disconnected!');\n        socket.off();}\n        \n    }, [ENDPOINT, location.search])\n\n\n    // useEffect(() => {\n\n    //     socket.on('message', message => {\n\n    //         setMessages(messages => [...messages, message])\n    //     });\n\n    //     socket.on(\"testroom\", ({ users }) => {\n\n    //         setUsers(users);\n    //     })\n    // })\n\n    return <div>hell</div>\n\n}\n\n\n// const sendMessage = (event) => {\n\n//     event.preventDefault()\n\n//     if (message) {\n\n//         socket.emit(\"sendMessage\", message, () => setMessage(\"\"));\n//     }\n\n\n//     return (\n\n//         <div>\n//             <InfoBar room={room} />\n//             <Messages messages={messages} name={name} />\n//             <Input message={message} setMessage={setMessage} sendMessage={sendMessage} />\n//         </div>\n//     )\n\n// }\n\nexport default Chat\n"]},"metadata":{},"sourceType":"module"}